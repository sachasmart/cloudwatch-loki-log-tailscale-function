name: "Release container to staging"
env:
  REGION: ca-central-1
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    name: "Run unit tests"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install project dependencies
        run: poetry install

      - name: Run tests with pytest
        run: |
          mkdir -p test-results
          poetry run pytest --junit-xml=test-results/results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/results.xml

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Pytest Results
          path: test-results/results.xml
          reporter: jest-junit

  backend:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment: staging
    name: "build"
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN}}

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Add poetry export command
        run: poetry self add poetry-plugin-export

      - name: Run Build script
        run: sh ./build.sh

      - name: Set image variables
        env:
          GHCR_REPOSITORY: ghcr.io/${{ github.repository }}
          IMAGE_TAG: latest
        run: |
          echo "GHCR_IMAGE=$GHCR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image and tag for GHCR and ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -f ./Dockerfile -t $GHCR_IMAGE .
          docker tag $GHCR_IMAGE $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push to GHCR
        run: |
          docker push ${{ env.GHCR_IMAGE }}

      - name: Push to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
